{"ast":null,"code":"var _jsxFileName = \"/Users/bagjuhong/Desktop/Contradiction/client/src/mobile/components/Menubar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Motion, spring } from 'react-motion';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isMenu = false;\n\nfunction Menubar() {\n  _s();\n\n  // dispatch를 사용하기 위한 준비\n  const dispatch = useDispatch(); // isMenu가 함수컴포넌트 안에 있어서 전역의 styled-component가 사용하지 못하는 중임\n\n  const _isMenu = useSelector(state => {\n    isMenu = state.reducerMenu.menu;\n    return state.reducerMenu.menu;\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Motion, {\n      defaultStyle: {\n        x: -200,\n        opacity: 0\n      },\n      style: {\n        x: spring(0),\n        opacity: spring(1)\n      },\n      children: style => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(StateBar, {\n          children: [/*#__PURE__*/_jsxDEV(StateBarColumn, {\n            style: {\n              paddingTop: '5px'\n            },\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faBars,\n              size: \"3x\",\n              onClick: () => {\n                if (!_isMenu) {\n                  dispatch({\n                    type: 'OPEN_MENU'\n                  });\n                } else {\n                  dispatch({\n                    type: 'CLOSE_MENU'\n                  });\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StateBarColumn, {\n            onClick: () => {\n              dispatch({\n                type: 'CLOSE_MENU'\n              });\n              return;\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              style: {\n                textDecoration: 'none',\n                color: 'black',\n                fontSize: '50px'\n              },\n              children: \"Hachaerin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n} // const SideMenu = styled.div`\n//     background-color: black;\n//     width:300px;\n//     height: 100%;\n//     position: fixed;\n//     top: 0;\n//     // 조건부 스타일드를 어떻게 하지.. ㅎㅎ\n//     left: ${ isMenu === false ? '-300px' : '0px'};\n//     z-index: 1;\n//     transition: all .35s;\n// `;\n\n\n_s(Menubar, \"pU4faBpPj214ikUOpexP2ctU/CU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Menubar;\nconst StateBar = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    height: 100px;\n    padding: 20px;\n    /* background-color: red; for test*/\n    position: static;\n`;\n_c2 = StateBar;\nconst StateBarColumn = styled.div`\n`;\n_c3 = StateBarColumn;\nexport default Menubar;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Menubar\");\n$RefreshReg$(_c2, \"StateBar\");\n$RefreshReg$(_c3, \"StateBarColumn\");","map":{"version":3,"sources":["/Users/bagjuhong/Desktop/Contradiction/client/src/mobile/components/Menubar.jsx"],"names":["React","useSelector","useDispatch","Motion","spring","Link","FontAwesomeIcon","faBars","styled","isMenu","Menubar","dispatch","_isMenu","state","reducerMenu","menu","x","opacity","style","paddingTop","type","textDecoration","color","fontSize","StateBar","div","StateBarColumn"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,cAA/B;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,IAAIC,MAAM,GAAG,KAAb;;AAGA,SAASC,OAAT,GAAmB;AAAA;;AACf;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B,CAFe,CAIf;;AACA,QAAMU,OAAO,GAAGX,WAAW,CAACY,KAAK,IAAI;AACjCJ,IAAAA,MAAM,GAAGI,KAAK,CAACC,WAAN,CAAkBC,IAA3B;AACA,WAAOF,KAAK,CAACC,WAAN,CAAkBC,IAAzB;AACH,GAH0B,CAA3B;;AAKA,sBACI;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,YAAY,EAAE;AAAEC,QAAAA,CAAC,EAAE,CAAC,GAAN;AAAWC,QAAAA,OAAO,EAAE;AAApB,OADlB;AAEI,MAAA,KAAK,EAAE;AAAED,QAAAA,CAAC,EAAEZ,MAAM,CAAC,CAAD,CAAX;AAAgBa,QAAAA,OAAO,EAAEb,MAAM,CAAC,CAAD;AAA/B,OAFX;AAAA,gBAIMc,KAAD,iBACG;AAAA,+BACI,QAAC,QAAD;AAAA,kCACI,QAAC,cAAD;AAAgB,YAAA,KAAK,EAAE;AAAEC,cAAAA,UAAU,EAAE;AAAd,aAAvB;AAAA,mCACI,QAAC,eAAD;AAAiB,cAAA,IAAI,EAAEZ,MAAvB;AACI,cAAA,IAAI,EAAC,IADT;AAEI,cAAA,OAAO,EAAE,MAAM;AACX,oBAAI,CAACK,OAAL,EAAc;AACVD,kBAAAA,QAAQ,CAAC;AAAES,oBAAAA,IAAI,EAAE;AAAR,mBAAD,CAAR;AACH,iBAFD,MAEO;AACHT,kBAAAA,QAAQ,CAAC;AAAES,oBAAAA,IAAI,EAAE;AAAR,mBAAD,CAAR;AACH;AACJ;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAWI,QAAC,cAAD;AACI,YAAA,OAAO,EAAE,MAAI;AACTT,cAAAA,QAAQ,CAAC;AAAES,gBAAAA,IAAI,EAAE;AAAR,eAAD,CAAR;AACA;AACH,aAJL;AAAA,mCAKC,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,GAAT;AAAa,cAAA,KAAK,EAAE;AAAEC,gBAAAA,cAAc,EAAE,MAAlB;AAA0BC,gBAAAA,KAAK,EAAE,OAAjC;AAA0CC,gBAAAA,QAAQ,EAAE;AAApD,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALD;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AALR;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAiCH,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAxDSb,O;UAEYR,W,EAGDD,W;;;KALXS,O;AA4DT,MAAMc,QAAQ,GAAGhB,MAAM,CAACiB,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,Q;AAUN,MAAME,cAAc,GAAGlB,MAAM,CAACiB,GAAI;AAClC,CADA;MAAMC,c;AAIN,eAAehB,OAAf","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Motion, spring } from 'react-motion';\n\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\n\nlet isMenu = false;\n\n\nfunction Menubar() {\n    // dispatch를 사용하기 위한 준비\n    const dispatch = useDispatch();\n\n    // isMenu가 함수컴포넌트 안에 있어서 전역의 styled-component가 사용하지 못하는 중임\n    const _isMenu = useSelector(state => {\n        isMenu = state.reducerMenu.menu;\n        return state.reducerMenu.menu;\n    });\n\n    return (\n        <>\n            <Motion\n                defaultStyle={{ x: -200, opacity: 0 }}\n                style={{ x: spring(0), opacity: spring(1) }}\n            >\n                {(style) => (\n                    <>\n                        <StateBar >\n                            <StateBarColumn style={{ paddingTop: '5px' }}>\n                                <FontAwesomeIcon icon={faBars}\n                                    size=\"3x\"\n                                    onClick={() => {\n                                        if (!_isMenu) {\n                                            dispatch({ type: 'OPEN_MENU' })\n                                        } else {\n                                            dispatch({ type: 'CLOSE_MENU' })\n                                        }\n                                    }} /></StateBarColumn>\n                            <StateBarColumn \n                                onClick={()=>{\n                                    dispatch({ type: 'CLOSE_MENU' });\n                                    return;\n                                }}\n                            ><Link to='/' style={{ textDecoration: 'none', color: 'black', fontSize: '50px' }} \n                            >Hachaerin</Link></StateBarColumn>\n\n                        </StateBar>\n                    </>)}\n            </Motion>\n            {/* <SideMenu className=\"SideMenu_test\">SideMenu</SideMenu> */}\n        </>\n    )\n}\n\n\n// const SideMenu = styled.div`\n//     background-color: black;\n//     width:300px;\n//     height: 100%;\n//     position: fixed;\n//     top: 0;\n//     // 조건부 스타일드를 어떻게 하지.. ㅎㅎ\n//     left: ${ isMenu === false ? '-300px' : '0px'};\n//     z-index: 1;\n//     transition: all .35s;\n// `;\n\n\n\nconst StateBar = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    height: 100px;\n    padding: 20px;\n    /* background-color: red; for test*/\n    position: static;\n`;\n\nconst StateBarColumn = styled.div`\n`;\n\n\nexport default Menubar;\n"]},"metadata":{},"sourceType":"module"}