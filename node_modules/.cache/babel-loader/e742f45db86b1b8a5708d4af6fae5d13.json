{"ast":null,"code":"var _jsxFileName = \"/Users/bagjuhong/Desktop/Contradiction/client/src/mobile/components/Winter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Motion, spring } from 'react-motion';\nimport styled from 'styled-components';\nimport picturesUrl from '../../dummyData/dummyPictures';\nimport Menubar from './Menubar';\nimport MenuView from './MenuView';\nimport ViewDetail from './ViewDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Winter({}) {\n  _s();\n\n  // const [forCleanUp, setForCleanUp] = useState(true);\n  const [pictures, setPictures] = useState([]);\n  const [isPictureSelected, setIsPictureSelected] = useState(false); // const [testConut, setTestCount] = useState(0);\n  // const [test, setTest] = useState(0);\n\n  const dispatch = useDispatch();\n  const category = useSelector(state => {\n    return state.reducerMenu.category;\n  });\n  useEffect(() => {\n    // console.log('category : ', category);\n    // console.log(\"picturesUrl[category] : \", picturesUrl[category]);\n    setPictures(picturesUrl[category]); // let temp = testConut + 1;\n    // setTestCount(temp);\n    // console.log('testConut : ', testConut);\n    // 웹 서버 구현하면 여기서 Ajax요청할 것\n  }, [category]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isPictureSelected ? /*#__PURE__*/_jsxDEV(ViewDetail, {\n      closeDetail: setIsPictureSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MenuView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Menubar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          dispatch({\n            type: 'CLOSE_MENU'\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(Motion, {\n          defaultStyle: {\n            x: -200,\n            opacity: 0\n          },\n          style: {\n            x: spring(0),\n            opacity: spring(1)\n          },\n          children: style => /*#__PURE__*/_jsxDEV(Div, {\n            children: pictures.map((el, idx) => /*#__PURE__*/_jsxDEV(Img, {\n              src: el.src,\n              style: {\n                opacity: style.opacity\n              },\n              onClick: () => {\n                dispatch({\n                  type: 'CHANGE_VIEWDETAIL',\n                  payload: {\n                    picture: el\n                  }\n                });\n                setIsPictureSelected(!isPictureSelected);\n              }\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(Winter, \"+Jdj/UP+dhC6v/EWJHy0D1I8mfs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Winter;\nconst Div = styled.div`\n    text-align: center;\n`;\n_c2 = Div;\nconst Img = styled.img`\n    /* padding: 25px; */\n    width: 70%;\n    height: 30%;\n    animation-name: name;\n    animation-duration: 5s;\n`;\n_c3 = Img;\nexport default Winter;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Winter\");\n$RefreshReg$(_c2, \"Div\");\n$RefreshReg$(_c3, \"Img\");","map":{"version":3,"sources":["/Users/bagjuhong/Desktop/Contradiction/client/src/mobile/components/Winter.jsx"],"names":["React","useState","useEffect","useSelector","useDispatch","Motion","spring","styled","picturesUrl","Menubar","MenuView","ViewDetail","Winter","pictures","setPictures","isPictureSelected","setIsPictureSelected","dispatch","category","state","reducerMenu","type","x","opacity","style","map","el","idx","src","payload","picture","Div","div","Img","img"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Motion, spring } from 'react-motion';\nimport styled from 'styled-components';\nimport picturesUrl from '../../dummyData/dummyPictures';\nimport Menubar from './Menubar';\nimport MenuView from './MenuView';\nimport ViewDetail from './ViewDetail';\n\nfunction Winter({}) {\n    // const [forCleanUp, setForCleanUp] = useState(true);\n    const [pictures, setPictures] = useState([]);\n    const [isPictureSelected, setIsPictureSelected] = useState(false);\n    // const [testConut, setTestCount] = useState(0);\n    // const [test, setTest] = useState(0);\n   \n   \n    const dispatch = useDispatch();\n    \n    \n    const category = useSelector(state => {\n        return state.reducerMenu.category\n    });\n\n\n    useEffect(() => {\n            // console.log('category : ', category);\n            // console.log(\"picturesUrl[category] : \", picturesUrl[category]);\n            setPictures(picturesUrl[category]);\n            // let temp = testConut + 1;\n            // setTestCount(temp);\n            // console.log('testConut : ', testConut);\n            // 웹 서버 구현하면 여기서 Ajax요청할 것\n        }, [category]);\n\n    return (\n        <>\n            {isPictureSelected ? <ViewDetail closeDetail={setIsPictureSelected}/> :\n                <>\n                    <MenuView />\n                    <Menubar />\n                    <div onClick={() => {\n                        dispatch({ type: 'CLOSE_MENU' })\n                    }}>\n                        <Motion\n                            defaultStyle={{ x: -200, opacity: 0 }}\n                            style={{ x: spring(0), opacity: spring(1) }}\n                        >\n                            {(style) => (\n                                <Div>\n                                    {pictures.map((el, idx) =>\n                                        <Img src={el.src}\n                                            key={idx}\n                                            style={{ opacity: style.opacity }}\n                                            onClick={() => {\n                                                dispatch({\n                                                    type: 'CHANGE_VIEWDETAIL',\n                                                    payload: {\n                                                        picture: el\n                                                    }\n                                                });\n                                                setIsPictureSelected(!isPictureSelected);\n                                            }}></Img>\n                                    )}\n                                </Div>\n                            )}\n\n                        </Motion>\n                    </div>\n                </>\n            }\n        </>\n    )\n}\n\nconst Div = styled.div`\n    text-align: center;\n`;\nconst Img = styled.img`\n    /* padding: 25px; */\n    width: 70%;\n    height: 30%;\n    animation-name: name;\n    animation-duration: 5s;\n`;\n\nexport default Winter\n"]},"metadata":{},"sourceType":"module"}