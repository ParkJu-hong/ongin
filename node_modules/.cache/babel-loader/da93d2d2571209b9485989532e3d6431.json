{"ast":null,"code":"var _jsxFileName = \"/Users/bagjuhong/Desktop/Contradiction/client/src/mobile/components/Menubar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { faBell } from '@fortawesome/free-regular-svg-icons';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isMenu = false;\n\nfunction Menubar() {\n  _s();\n\n  // dispatch를 사용하기 위한 준비\n  const dispatch = useDispatch(); // isMenu가 함수컴포넌트 안에 있어서 전역의 styled-component가 사용하지 못하는 중임\n\n  const _isMenu = useSelector(state => {\n    isMenu = state.reducerMenu.menu;\n    return state.reducerMenu.menu;\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SideMenu, {\n      className: \"SideMenu_test\",\n      children: \"SideMenu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Menubar, \"pU4faBpPj214ikUOpexP2ctU/CU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Menubar;\nconst SideMenu = styled.div`\n    background-color: black;\n    width:300px;\n    height: 100%;\n    position: fixed;\n    top: 0;\n    // 조건부 스타일드를 어떻게 하지.. ㅎㅎ\n    left: ${isMenu === false ? '-300px' : '0px'};\n    z-index: 1;\n    transition: all .35s;\n`;\n_c2 = SideMenu;\nconst StateBar = styled.div`\n    /* display: flex;\n    justify-content: center;\n    padding-top: 15px;\n    padding-bottom: 15px;\n    width: 100%;\n    position: fixed; */\n    display: flex;\n    width: 100%;\n    padding: 20px;\n    position: fixed;\n`;\nconst StateBarColumn = styled.div`\n    width: 33%;\n    text-align: center;\n`;\nexport default Menubar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Menubar\");\n$RefreshReg$(_c2, \"SideMenu\");","map":{"version":3,"sources":["/Users/bagjuhong/Desktop/Contradiction/client/src/mobile/components/Menubar.jsx"],"names":["React","useSelector","useDispatch","Link","FontAwesomeIcon","faBars","faBell","styled","isMenu","Menubar","dispatch","_isMenu","state","reducerMenu","menu","SideMenu","div","StateBar","StateBarColumn"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,SAASC,MAAT,QAAuB,qCAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,IAAIC,MAAM,GAAG,KAAb;;AAGA,SAASC,OAAT,GAAmB;AAAA;;AACf;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B,CAFe,CAIf;;AACA,QAAMS,OAAO,GAAGV,WAAW,CAACW,KAAK,IAAI;AACjCJ,IAAAA,MAAM,GAAGI,KAAK,CAACC,WAAN,CAAkBC,IAA3B;AACA,WAAOF,KAAK,CAACC,WAAN,CAAkBC,IAAzB;AACH,GAH0B,CAA3B;;AAKA,sBACI;AAAA,2BAYI,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZJ,mBADJ;AAgBH;;GA1BQL,O;UAEYP,W,EAGDD,W;;;KALXQ,O;AA6BT,MAAMM,QAAQ,GAAGR,MAAM,CAACS,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,YAAaR,MAAM,KAAK,KAAX,GAAmB,QAAnB,GAA8B,KAAM;AACjD;AACA;AACA,CAVA;MAAMO,Q;AAcN,MAAME,QAAQ,GAAGV,MAAM,CAACS,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,MAAME,cAAc,GAAGX,MAAM,CAACS,GAAI;AAClC;AACA;AACA,CAHA;AAMA,eAAeP,OAAf","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { faBell } from '@fortawesome/free-regular-svg-icons';\nimport styled from 'styled-components';\n\nlet isMenu = false;\n\n\nfunction Menubar() {\n    // dispatch를 사용하기 위한 준비\n    const dispatch = useDispatch();\n    \n    // isMenu가 함수컴포넌트 안에 있어서 전역의 styled-component가 사용하지 못하는 중임\n    const _isMenu = useSelector(state => {\n        isMenu = state.reducerMenu.menu;\n        return state.reducerMenu.menu;\n    });\n\n    return (\n        <>\n            {/* <StateBar>\n                <StateBarColumn><FontAwesomeIcon icon={faBars} className=\"links\" onClick={() => {\n                    if (!_isMenu) {\n                        dispatch({ type: 'OPEN_MENU' })\n                    } else {\n                        dispatch({ type: 'CLOSE_MENU' })\n                    }\n                }} /></StateBarColumn>\n                <StateBarColumn><Link to='/' style={{ textDecoration: 'none', color: 'black', fontSize: '23px'}} className=\"links\">Hachaerin</Link></StateBarColumn>\n                <StateBarColumn><Link to='/faBell' style={{ textDecoration: 'none', color: 'black' }} className=\"links\"><FontAwesomeIcon icon={faBell} /></Link></StateBarColumn>\n            </StateBar> */}\n            <SideMenu className=\"SideMenu_test\">SideMenu</SideMenu>\n        </>\n    )\n}\n\n\nconst SideMenu = styled.div`\n    background-color: black;\n    width:300px;\n    height: 100%;\n    position: fixed;\n    top: 0;\n    // 조건부 스타일드를 어떻게 하지.. ㅎㅎ\n    left: ${ isMenu === false ? '-300px' : '0px'};\n    z-index: 1;\n    transition: all .35s;\n`;\n\n\n\nconst StateBar = styled.div`\n    /* display: flex;\n    justify-content: center;\n    padding-top: 15px;\n    padding-bottom: 15px;\n    width: 100%;\n    position: fixed; */\n    display: flex;\n    width: 100%;\n    padding: 20px;\n    position: fixed;\n`;\n\nconst StateBarColumn = styled.div`\n    width: 33%;\n    text-align: center;\n`;\n\n\nexport default Menubar;\n"]},"metadata":{},"sourceType":"module"}